{"version":3,"file":"main.js","mappings":"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","sources":["webpack://memory-card-game/./src/gameboard/Card.tsx","webpack://memory-card-game/./src/gameboard/Board.tsx","webpack://memory-card-game/./src/api/useGetCards.tsx","webpack://memory-card-game/./src/gameboard/Result.tsx","webpack://memory-card-game/./src/app/DifficultySwitch.tsx","webpack://memory-card-game/./src/index.tsx","webpack://memory-card-game/./src/app/App.tsx","webpack://memory-card-game/./src/style.css","webpack://memory-card-game/./src/style.css?7163"],"sourcesContent":["interface CardProps {\n  id: number;\n  handleCardClick: (id: number) => void;\n  cardObject: {\n    name: string;\n    imgUrl: string;\n  };\n}\n\nconst Card = (props: CardProps) => (\n  <div\n    className=\"card\"\n    onClick={() => {\n      props.handleCardClick(props.id);\n    }}\n  >\n    <img src={props.cardObject.imgUrl} alt={props.cardObject.name} />\n    <p>{props.cardObject.name}</p>\n  </div>\n);\n\nexport default Card;\n","import { useEffect } from \"react\";\nimport { useGetCards } from \"../api/useGetCards\";\nimport Card from \"./Card\";\n\ninterface BoardProps {\n  totalCards: number;\n  clickedCards: number[];\n  setClickedCards: (clickedCards: number[]) => void;\n  bestScore: number;\n  setBestScore: (bestScore: number) => void;\n  setGameResult: (gameResult: \"lost\" | \"won\" | null) => void;\n}\n\n// Board component\nconst Board = ({\n  totalCards,\n  clickedCards,\n  setClickedCards,\n  bestScore,\n  setBestScore,\n  setGameResult,\n}: BoardProps) => {\n  const { cards, isLoading, error } = useGetCards(totalCards);\n\n  // Game logic\n  const handleCardClick = (id: number) => {\n    if (clickedCards.includes(id)) {\n      console.log(\"card already clicked\");\n      if (clickedCards.length > bestScore) setBestScore(clickedCards.length);\n      setGameResult(\"lost\");\n      setClickedCards([]);\n    } else {\n      console.log(\"new card clicked\");\n      if (clickedCards.length === totalCards - 1) {\n        if (clickedCards.length >= bestScore)\n          setBestScore(clickedCards.length + 1);\n        setGameResult(\"won\");\n        setClickedCards([]);\n      } else {\n        setClickedCards([...clickedCards, id]);\n      }\n    }\n  };\n\n  if (error) return <div>Error: {error.message}</div>;\n\n  return (\n    <>\n      {isLoading ? (\n        <div>loading...</div>\n      ) : (\n        Object.keys(cards)\n          .map((card) => ({ sort: Math.random(), value: card }))\n          .sort((a, b) => a.sort - b.sort)\n          .map((card) => Number(card.value))\n          .map((card) => (\n            <Card\n              key={card}\n              id={card}\n              cardObject={cards[card]}\n              handleCardClick={handleCardClick}\n            />\n          ))\n      )}\n    </>\n  );\n};\n\nexport { Board };\n","import { useEffect, useState } from \"react\";\n\ninterface Card {\n  name: string;\n  imgUrl: string;\n}\n\ninterface PokemonApiBody {\n  name: string;\n  sprites: {\n    front_default: string;\n  };\n  [i: string]: any;\n}\n\nconst useGetCards = (cardCount: number) => {\n  const [cards, setCards] = useState<Card[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const pokemonIds: number[] = [];\n  for (let i = 0; i < cardCount; i += 1) {\n    pokemonIds.push(Math.floor(Math.random() * 898));\n  }\n\n  useEffect(() => {\n    try {\n      (async () => {\n        pokemonIds.map(async (id, i) => {\n          const response = await fetch(\n            `https://pokeapi.co/api/v2/pokemon/${id}`,\n            {\n              mode: \"cors\",\n            }\n          );\n          const data: PokemonApiBody = await response.json();\n          setCards((prevState) => [\n            ...prevState,\n            {\n              name: data.name.charAt(0).toUpperCase() + data.name.slice(1),\n              imgUrl: data.sprites.front_default,\n            },\n          ]);\n        });\n      })();\n    } catch (err) {\n      if (err instanceof Error) setError(err);\n      else setError(new Error(JSON.stringify(err)));\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { cards, isLoading, error };\n};\n\nexport { useGetCards };\n","interface resultProps {\n  gameResult: \"lost\" | \"won\" | null;\n  setGameResult: (gameResult: null) => void;\n}\n\nconst Result = (props: resultProps) => {\n  if (props.gameResult === \"won\") {\n    return (\n      <div\n        id=\"result\"\n        className=\"won\"\n        onClick={() => props.setGameResult(null)}\n      >\n        <div>You won :-)</div>\n      </div>\n    );\n  }\n\n  return (\n    <div id=\"result\" className=\"lost\" onClick={() => props.setGameResult(null)}>\n      <div>You lost :-(</div>\n    </div>\n  );\n};\n\nexport default Result;\n","interface difficultySwitchProps {\n  totalCards: number;\n  setTotalCards(totalCards: number): void;\n  setClickedCards(clickedCards: number[]): void;\n}\n\nconst DifficultySwitch = ({\n  totalCards,\n  setTotalCards,\n  setClickedCards,\n}: difficultySwitchProps) => {\n  const changeDifficulty = (count: number) => {\n    setTotalCards(count);\n    // reset game\n    setClickedCards([]);\n  };\n\n  return (\n    <>\n      <label htmlFor=\"difficultySwitch\">Difficulty </label>\n      <select\n        name=\"difficultySwitch\"\n        id=\"difficultySwitch\"\n        onChange={(e) => changeDifficulty(Number(e.target.value))}\n        defaultValue={totalCards}\n      >\n        <option value=\"4\">Easy</option>\n        <option value=\"8\">Medium</option>\n        <option value=\"12\">Hard</option>\n      </select>\n    </>\n  );\n};\n\nexport default DifficultySwitch;\n","import { createRoot } from \"react-dom/client\";\nimport App from \"./app/App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container!);\nroot.render(<App />);\n","import { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { Board } from \"../gameboard/Board\";\nimport Result from \"../gameboard/Result\";\nimport DifficultySwitch from \"./DifficultySwitch\";\n\nconst App = () => {\n  const [totalCards, setTotalCards] = useState(8);\n  const [clickedCards, setClickedCards] = useState<number[]>([]);\n  const [bestScore, setBestScore] = useState<number>(0);\n  const [gameResult, setGameResult] = useState<\"lost\" | \"won\" | null>(null);\n\n  return (\n    <>\n      <h1>Memory card game</h1>\n      <div>\n        <p>\n          Get points by clicking on an image but don&apos;t click the same more\n          than once!\n        </p>\n      </div>\n      <div>\n        <p>Current score: {clickedCards.length}</p>\n        <p>Best score: {bestScore}</p>\n        <DifficultySwitch\n          totalCards={totalCards}\n          setTotalCards={setTotalCards}\n          setClickedCards={setClickedCards}\n        />\n        {/* add new cards btn */}\n      </div>\n      <div id=\"cards\">\n        {/* add basename=\"/memory-card\" for gh-pages deployment - remove if deploying to custom domain */}\n        <Router basename=\"/memory-card\">\n          <Routes>\n            <Route\n              path={`/`}\n              element={\n                <>\n                  {gameResult && <Navigate to=\"/result\" />}\n                  <Board\n                    key={totalCards} // force re-render when totalCards changes\n                    totalCards={totalCards}\n                    clickedCards={clickedCards}\n                    setClickedCards={setClickedCards}\n                    bestScore={bestScore}\n                    setBestScore={setBestScore}\n                    setGameResult={setGameResult}\n                  />\n                </>\n              }\n            />\n            <Route\n              path={`/result`}\n              element={\n                <>\n                  {!gameResult && <Navigate to=\"/\" />}\n                  <Result\n                    gameResult={gameResult}\n                    setGameResult={setGameResult}\n                  />\n                </>\n              }\n            />\n          </Routes>\n        </Router>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"./wonmsg.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"./lostmsg.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  background: black;\\n  color: white;\\n  font-family: sans-serif;\\n  font-size: 16px;\\n}\\n\\n#root {\\n  display: grid;\\n  grid-template-rows: max-content max-content;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 15px;\\n  max-width: 533px;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\nh1 {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 15px;\\n  font-size: xx-large;\\n  border-bottom: 1px white dashed;\\n}\\n\\n#cards {\\n  grid-column: 1 / -1;\\n  display: grid;\\n  grid-template-rows: repeat(auto-fit, 172px);\\n  grid-template-columns: repeat(auto-fit, 109px);\\n  gap: 15px;\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.card {\\n  border: 1px white dashed;\\n  border-radius: 5%;\\n  padding: 10px;\\n}\\n\\n.card:hover {\\n  border: solid;\\n}\\n\\n.card p {\\n  text-align: center;\\n}\\n\\n#result {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-size: cover;\\n}\\n\\n#result.won {\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n\\n#result.lost {\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n}\\n\\n#result div {\\n  text-align: center;\\n  position: relative;\\n  top: 10%;\\n}\\n\\nbutton {\\n  background-color: black;\\n  border: white 1px solid;\\n  border-radius: 4px;\\n  color: wheat;\\n  line-height: 18px;\\n  margin-right: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,2CAA2C;EAC3C,8BAA8B;EAC9B,SAAS;EACT,gBAAgB;EAChB,cAAc;EACd,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,2CAA2C;EAC3C,8CAA8C;EAC9C,SAAS;EACT,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,yDAAqC;AACvC;;AAEA;EACE,yDAAsC;AACxC;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB\",\"sourcesContent\":[\"html,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  background: black;\\n  color: white;\\n  font-family: sans-serif;\\n  font-size: 16px;\\n}\\n\\n#root {\\n  display: grid;\\n  grid-template-rows: max-content max-content;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 15px;\\n  max-width: 533px;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\nh1 {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 15px;\\n  font-size: xx-large;\\n  border-bottom: 1px white dashed;\\n}\\n\\n#cards {\\n  grid-column: 1 / -1;\\n  display: grid;\\n  grid-template-rows: repeat(auto-fit, 172px);\\n  grid-template-columns: repeat(auto-fit, 109px);\\n  gap: 15px;\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.card {\\n  border: 1px white dashed;\\n  border-radius: 5%;\\n  padding: 10px;\\n}\\n\\n.card:hover {\\n  border: solid;\\n}\\n\\n.card p {\\n  text-align: center;\\n}\\n\\n#result {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-size: cover;\\n}\\n\\n#result.won {\\n  background-image: url(\\\"./wonmsg.png\\\");\\n}\\n\\n#result.lost {\\n  background-image: url(\\\"./lostmsg.png\\\");\\n}\\n\\n#result div {\\n  text-align: center;\\n  position: relative;\\n  top: 10%;\\n}\\n\\nbutton {\\n  background-color: black;\\n  border: white 1px solid;\\n  border-radius: 4px;\\n  color: wheat;\\n  line-height: 18px;\\n  margin-right: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["props","_jsxs","className","onClick","handleCardClick","id","children","_jsx","src","cardObject","imgUrl","alt","name","Board","totalCards","clickedCards","setClickedCards","bestScore","setBestScore","setGameResult","cardCount","useState","cards","setCards","isLoading","setIsLoading","error","setError","pokemonIds","i","push","Math","floor","random","useEffect","map","fetch","mode","response","json","data","prevState","charAt","toUpperCase","slice","sprites","front_default","err","Error","JSON","stringify","useGetCards","includes","console","log","length","message","Object","keys","card","sort","value","a","b","Number","Card","gameResult","setTotalCards","htmlFor","onChange","e","count","target","defaultValue","container","document","getElementById","createRoot","render","DifficultySwitch","Router","basename","Routes","Route","path","element","Navigate","to","Result","___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","module","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}