{"version":3,"file":"main.js","mappings":"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","sources":["webpack://memory-card-game/./src/gameboard/loadCards.tsx","webpack://memory-card-game/./src/gameboard/Card.tsx","webpack://memory-card-game/./src/gameboard/Board.tsx","webpack://memory-card-game/./src/gameboard/Result.tsx","webpack://memory-card-game/./src/app/DifficultySwitch.tsx","webpack://memory-card-game/./src/index.tsx","webpack://memory-card-game/./src/app/App.tsx","webpack://memory-card-game/./src/style.css","webpack://memory-card-game/./src/style.css?7163","webpack://memory-card-game/./src/lostmsg.png","webpack://memory-card-game/./src/wonmsg.png"],"sourcesContent":["interface pokemonObject {\n  [i: number]: {\n    name: string;\n    imgUrl: string;\n  };\n}\n\ninterface pokemonResponse<T> extends Response {\n  parsedBody?: T;\n}\n\nconst LoadCards = async <T,>(cardCount: number): Promise<pokemonObject> => {\n  const pokemonIds = [];\n  let pokemons = {};\n  for (let i = 0; i < cardCount; i += 1) {\n    pokemonIds.push(Math.floor(Math.random() * 898));\n  }\n\n  try {\n    await Promise.all(\n      pokemonIds.map(async (id, i) => {\n        const response: pokemonResponse<T> = await fetch(\n          `https://pokeapi.co/api/v2/pokemon/${id}`,\n          {\n            mode: \"cors\",\n          }\n        );\n        if (!response.ok) throw new Error(response.statusText);\n        const body = await response.json();\n        pokemons = {\n          ...pokemons,\n          [i]: {\n            name: body.name.charAt(0).toUpperCase() + body.name.slice(1),\n            imgUrl: body.sprites.front_default,\n          },\n        };\n      })\n    );\n  } catch (error) {\n    console.log(error);\n  }\n\n  return pokemons;\n};\n\nexport default LoadCards;\n","import React from \"react\";\n\ninterface CardProps {\n  id: number;\n  handleCardClick: (id: number) => void;\n  cardObject: {\n    name: string;\n    imgUrl: string;\n  };\n}\n\nconst Card = (props: CardProps) => (\n  <div\n    className=\"card\"\n    onClick={() => {\n      props.handleCardClick(props.id);\n    }}\n  >\n    <img src={props.cardObject.imgUrl} alt={props.cardObject.name} />\n    <p>{props.cardObject.name}</p>\n  </div>\n);\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport loadCards from \"./loadCards\";\nimport Card from \"./Card\";\n\ninterface BoardProps {\n  totalCards: number;\n  clickedCards: number[];\n  setClickedCards: (clickedCards: number[]) => void;\n  bestScore: number;\n  setBestScore: (bestScore: number) => void;\n  setGameResult: (gameResult: \"lost\" | \"won\" | null) => void;\n}\n\ninterface pokemonObject {\n  [i: number]: {\n    name: string;\n    imgUrl: string;\n  };\n}\n\n// Cards component\nconst Board = ({\n  totalCards,\n  clickedCards,\n  setClickedCards,\n  bestScore,\n  setBestScore,\n  setGameResult,\n}: BoardProps) => {\n  const [cards, setCards] = useState<pokemonObject>({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Game logic component\n  const handleCardClick = (id: number) => {\n    if (clickedCards.includes(id)) {\n      console.log(\"card already clicked\");\n      if (clickedCards.length > bestScore) setBestScore(clickedCards.length);\n      setGameResult(\"lost\");\n      setClickedCards([]);\n    } else {\n      console.log(\"new card clicked\");\n      setClickedCards([...clickedCards, id]);\n    }\n  };\n\n  // if no of total cards is changed (e.g. game started or difficulty changed)\n  useEffect(() => {\n    setClickedCards([]);\n    (async () => {\n      setIsLoading(true);\n      setCards(await loadCards(totalCards));\n      setIsLoading(false);\n    })();\n    // console.log(`# total cards ${totalCards}`);\n  }, [totalCards]);\n\n  useEffect(() => {\n    // if all cards clicked // WON\n    if (\n      clickedCards.length === Object.keys(cards).length &&\n      clickedCards.length > 0\n    ) {\n      setGameResult(\"won\");\n      setClickedCards([]);\n      (async () => {\n        setIsLoading(true);\n        setCards(await loadCards(totalCards));\n        setIsLoading(false);\n      })();\n      console.log(\"WON!!!\");\n    }\n  }, [cards, clickedCards, setClickedCards, totalCards]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>loading...</div>\n      ) : (\n        Object.keys(cards)\n          .map((card) => ({ sort: Math.random(), value: card }))\n          .sort((a, b) => a.sort - b.sort)\n          .map((card) => Number(card.value))\n          .map((card) => (\n            <Card\n              key={card}\n              id={card}\n              cardObject={cards[card]}\n              handleCardClick={handleCardClick}\n            />\n          ))\n      )}\n    </>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\n\ninterface resultProps {\n  gameResult: \"lost\" | \"won\" | null;\n  setGameResult: (gameResult: null) => void;\n}\n\nconst Result = (props: resultProps) => {\n  if (props.gameResult === \"won\") {\n    return (\n      <div\n        id=\"result\"\n        className=\"won\"\n        onClick={() => props.setGameResult(null)}\n      >\n        <div>You won :-)</div>\n      </div>\n    );\n  }\n\n  return (\n    <div id=\"result\" className=\"lost\" onClick={() => props.setGameResult(null)}>\n      <div>You lost :-(</div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\n\ntype difficultySwitchProps = {\n  totalCards: number;\n  setTotalCards(totalCards: number): void;\n};\n\nconst DifficultySwitch = (props: difficultySwitchProps) => {\n  const changeDifficulty = (count: number) => props.setTotalCards(count);\n\n  return (\n    <>\n      <label htmlFor=\"difficultySwitch\">Difficulty </label>\n      <select\n        name=\"difficultySwitch\"\n        id=\"difficultySwitch\"\n        onChange={(e) => changeDifficulty(Number(e.target.value))}\n        defaultValue={props.totalCards}\n      >\n        <option value=\"4\">Easy</option>\n        <option value=\"8\">Medium</option>\n        <option value=\"12\">Hard</option>\n      </select>\n    </>\n  );\n};\n\nexport default DifficultySwitch;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./app/App\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container!);\nroot.render(<App />);\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport Board from \"../gameboard/Board\";\nimport Result from \"../gameboard/Result\";\nimport DifficultySwitch from \"./DifficultySwitch\";\n\nconst App = () => {\n  const [totalCards, setTotalCards] = useState(8);\n  const [clickedCards, setClickedCards] = useState<number[]>([]);\n  const [bestScore, setBestScore] = useState<number>(0);\n  const [gameResult, setGameResult] = useState<\"lost\" | \"won\" | null>(null);\n\n  return (\n    <>\n      <h1>Memory card game</h1>\n      <div>\n        <p>\n          Get points by clicking on an image but don&apos;t click the same more\n          than once!\n        </p>\n      </div>\n      <div>\n        <p>Current score: {clickedCards.length}</p>\n        <p>Best score: {bestScore}</p>\n        <DifficultySwitch\n          totalCards={totalCards}\n          setTotalCards={setTotalCards}\n        />\n        {/* add new cards btn */}\n      </div>\n      <div id=\"cards\">\n        {/* add basename=\"/memory-card\" for gh-pages deployment - remove if deploying to custom domain */}\n        <Router basename=\"/memory-card\">\n          <Routes>\n            <Route\n              path={`/`}\n              element={\n                <>\n                  {gameResult && <Navigate to=\"/result\" />}\n                  <Board\n                    totalCards={totalCards}\n                    clickedCards={clickedCards}\n                    setClickedCards={setClickedCards}\n                    bestScore={bestScore}\n                    setBestScore={setBestScore}\n                    setGameResult={setGameResult}\n                  />\n                </>\n              }\n            />\n            <Route\n              path={`/result`}\n              element={\n                <>\n                  {!gameResult && <Navigate to=\"/\" />}\n                  <Result\n                    gameResult={gameResult}\n                    setGameResult={setGameResult}\n                  />\n                </>\n              }\n            />\n          </Routes>\n        </Router>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./wonmsg.png\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"./lostmsg.png\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  background: black;\\n  color: white;\\n  font-family: sans-serif;\\n  font-size: 16px;\\n}\\n\\n#root {\\n  display: grid;\\n  grid-template-rows: max-content max-content;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 15px;\\n  max-width: 533px;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\nh1 {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 15px;\\n  font-size: xx-large;\\n  border-bottom: 1px white dashed;\\n}\\n\\n#cards {\\n  grid-column: 1 / -1;\\n  display: grid;\\n  grid-template-rows: repeat(auto-fit, 172px);\\n  grid-template-columns: repeat(auto-fit, 109px);\\n  gap: 15px;\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.card {\\n  border: 1px white dashed;\\n  border-radius: 5%;\\n  padding: 10px;\\n}\\n\\n.card:hover {\\n  border: solid;\\n}\\n\\n.card p {\\n  text-align: center;\\n}\\n\\n#result {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-size: cover;\\n}\\n\\n#result.won {\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n\\n#result.lost {\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\n}\\n\\n#result div {\\n  text-align: center;\\n  position: relative;\\n  top: 10%;\\n}\\n\\nbutton {\\n  background-color: black;\\n  border: white 1px solid;\\n  border-radius: 4px;\\n  color: wheat;\\n  line-height: 18px;\\n  margin-right: 10px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;EAEE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,YAAY;EACZ,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,2CAA2C;EAC3C,8BAA8B;EAC9B,SAAS;EACT,gBAAgB;EAChB,cAAc;EACd,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,+BAA+B;AACjC;;AAEA;EACE,mBAAmB;EACnB,aAAa;EACb,2CAA2C;EAC3C,8CAA8C;EAC9C,SAAS;EACT,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;EACxB,iBAAiB;EACjB,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,yDAAqC;AACvC;;AAEA;EACE,yDAAsC;AACxC;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,uBAAuB;EACvB,uBAAuB;EACvB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB\",\"sourcesContent\":[\"html,\\nbody {\\n  height: 100%;\\n}\\n\\nbody {\\n  background: black;\\n  color: white;\\n  font-family: sans-serif;\\n  font-size: 16px;\\n}\\n\\n#root {\\n  display: grid;\\n  grid-template-rows: max-content max-content;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 15px;\\n  max-width: 533px;\\n  margin: 0 auto;\\n  height: 100%;\\n}\\n\\nh1 {\\n  grid-column: 1 / -1;\\n  text-align: center;\\n  padding: 15px;\\n  font-size: xx-large;\\n  border-bottom: 1px white dashed;\\n}\\n\\n#cards {\\n  grid-column: 1 / -1;\\n  display: grid;\\n  grid-template-rows: repeat(auto-fit, 172px);\\n  grid-template-columns: repeat(auto-fit, 109px);\\n  gap: 15px;\\n  height: 100%;\\n  position: relative;\\n}\\n\\n.card {\\n  border: 1px white dashed;\\n  border-radius: 5%;\\n  padding: 10px;\\n}\\n\\n.card:hover {\\n  border: solid;\\n}\\n\\n.card p {\\n  text-align: center;\\n}\\n\\n#result {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  background-size: cover;\\n}\\n\\n#result.won {\\n  background-image: url(\\\"./wonmsg.png\\\");\\n}\\n\\n#result.lost {\\n  background-image: url(\\\"./lostmsg.png\\\");\\n}\\n\\n#result div {\\n  text-align: center;\\n  position: relative;\\n  top: 10%;\\n}\\n\\nbutton {\\n  background-color: black;\\n  border: white 1px solid;\\n  border-radius: 4px;\\n  color: wheat;\\n  line-height: 18px;\\n  margin-right: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","export default __webpack_public_path__ + \"8fbba436e1ab426d544df01d6e667b32.png\";","export default __webpack_public_path__ + \"ab80887b4aba62b22185ab8ce9279a99.png\";"],"names":["cardCount","pokemonIds","pokemons","i","push","Math","floor","random","Promise","all","map","id","fetch","mode","response","ok","Error","statusText","json","body","name","charAt","toUpperCase","slice","imgUrl","sprites","front_default","console","log","props","_jsxs","className","onClick","handleCardClick","children","_jsx","src","cardObject","alt","totalCards","clickedCards","setClickedCards","bestScore","setBestScore","setGameResult","useState","cards","setCards","isLoading","setIsLoading","includes","length","useEffect","loadCards","Object","keys","card","sort","value","a","b","Number","Card","gameResult","htmlFor","onChange","e","count","target","setTotalCards","defaultValue","container","document","getElementById","createRoot","render","DifficultySwitch","Router","basename","Routes","Route","path","element","Navigate","to","Board","Result","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","module","options"],"sourceRoot":""}